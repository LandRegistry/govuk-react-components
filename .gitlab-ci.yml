image: hmlandregistry/dev_base_nodejs:1-10

before_script:
  - source scl_source enable rh-nodejs10

######## PIPELINE ########
# Here we define the full pipeline - a list of stages that get executed in order.
stages:
  - install
  - check
  - publish

######## JOBS ########
# Now we define the jobs that go into the various stages of the pipeline.
node_modules:
  stage: install
  script:
    - npm -v
    - node -v
    - npm ci
    - npm run installGovukFrontend
  after_script:
    - npm ls
  tags:
    - docker/hmlandregistry/*
  artifacts:
    # Have to use artifacts instead of cache, since cache is only based on a "best effort"
    # to cache items, and cannot be relied upon.
    paths:
      - node_modules
    expire_in: 1 hour

js-tests:
  stage: check
  script:
    - npm test
  tags:
    - docker/hmlandregistry/*

js-lint:
  stage: check
  script:
    - npm run lint-js
  tags:
    - docker/hmlandregistry/*

scss:
  stage: check
  script:
    - npm run lint-scss
  tags:
    - docker/hmlandregistry/*

check-tag:
  stage: check
  only:
    - tags
  script:
    - >
      grep "\"version\": \"${CI_COMMIT_REF_NAME}\"" package.json && echo "Tag matches package.json" || (echo "Specified tag in Git does not match that defined in package.json. Aborting..." && exit 1)
  tags:
    - docker/hmlandregistry/*

publish_node:
  stage: publish
  only:
    - tags
  script:
    - shopt -s globstar

    # Put together a distributable package containing a subset of the files
    - mkdir node_dist
    - cp -r src/components/govukComponents node_dist
    - cp package* node_dist

    - npm config set _auth $NPM_TOKEN
    - npm config set registry $NPM_REGISTRY
    - npm config set email=$NPM_EMAIL

    # Publish the package
    - npm publish node_dist
  tags:
    - docker/hmlandregistry/*
